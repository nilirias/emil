prog1
prog2
prog3
tipo
prog4
prog5
arr
prog5
arr
prog5
arr
prog5
arr
multid
multid
multid
multid
multivd
multivd
multid
varsdecl
tipo
tipofunc
func1
func2
tipo
param1
param2
multiparam
param
func3 1
varsdecl
func4
io1
fact1
fact1 {"name": "x", "addr": 0, "type": "int", "dim": 1}
arr
factor x
term2 x
exp2
exp x
rel2
rel
log2
logic
io2 write 0
write -1 -1 0
io3
write
fact1
fact1 {"name": "x", "addr": 0, "type": "int", "dim": 1}
arr
factor x
term2 x
exp2
exp x
rel2
relop
rel1
ctes1
factor 1
term2 1
exp2
exp 1
rel2
???? 11000
rel
rel
log2
logic
if1
iiifffifififi 11000 4
if jump [4] 4
ctes1
factor 999
term2 999
exp2
exp 999
rel2
rel
log2
logic
retval [0, 12001]
rettrye myfunc
RETURN -1 4004 12001
ret stmnt
stmnt
stmnt
else1
falso 4 6
eo 3 GOTOF 11000 -1 6
ctes1
factor 0
term2 0
exp2
exp1
fc1 myfunc
f2 1
fc2 myfunc {"ret": "int", "varc": 0, "paramcount": 1, "params": ["int"], "vart": null, "addr": 4004, "quad": 1, "var": [{"name": "x", "addr": 0, "type": "int", "dim": 1}]}
era 1
myfunc
7
fact1
fact1 {"name": "x", "addr": 0, "type": "int", "dim": 1}
arr
factor x
term2 x
exp2
???? 8000
exp1
ctes1
ctes1 12000
factor 1
term2 1
exp2
???? 8001
exp 8001
exp 8001
rel2
rel
log2
logic
fc3 0 myfunc 1
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa 8000
asdfghj 8001 int
multiargggggggggggggggg None
arg 1
fc4
fc5
func exp
aaaaaaaaa a1 None
factor None
term2 None
exp2
exp None
exp None
rel2
rel
log2
logic
retval [0, 12002]
rettrye myfunc
RETURN -1 4004 12002
ret stmnt
stmnt
stmnt
else stmnt
if2
if2 ?  top stackjumps 5 quadcont 13 GOTO -1 -1 12
if stmnt
stmnt
stmnt
stmnt
resetvarcont
funcdecl
funcdecl
scopename
scopmain1 main 14
scopemain2 GOTO -1 -1 13
ass1 4000 1
arracess None
ass2
ctes1
factor 5
term2 5
exp2
exp1
ctes1
factor 3
term2 3
exp2
???? 8000
exp 8000
exp 8000
rel2
rel
log2
logic
ass3 5
[0, 4000, 8000]
if op = 4000 8000 =
= 4000 8000 -1
???? -1
ass stmnt
ass1 4001 1
arracess None
ass2
ctes1
factor 2
term2 2
exp2
exp1
ctes1
ctes1 12004
factor 3
term2 3
exp2
???? 8001
exp 8001
exp 8001
rel2
rel
log2
logic
factor (
term2 (
term1
fact1
fact1 {"name": "a", "addr": 4000, "type": "int", "dim": 1}
arr
factor a
term2 a
???? 8002
exp2
exp1
ctes1
factor 9
term2 9
exp2
???? 8003
exp1
fact1
fact1 {"name": "a", "addr": 4000, "type": "int", "dim": 1}
arr
factor a
term2 a
term1
ctes1
factor 7
term2 7
???? 8004
exp )
exp 8003
rel2
rel
log2
logic
ass3 (
[0, 4001, 8003, 8004]
???? 8005
ass stmnt
ass1 4002 1
arracess None
ass2
ctes1
ctes1 12000
factor 1
term2 1
exp2
exp 1
rel2
rel
log2
logic
ass3 1
[0, 4001, 8005, 4002, 12000]
if op = 4002 12000 =
= 4002 12000 -1
???? -1
ass stmnt
fact1
fact1 {"name": "a", "addr": 4000, "type": "int", "dim": 1}
arr
factor a
term2 a
exp2
exp a
rel2
relop
rel1
ctes1
ctes1 12003
factor 5
term2 5
exp2
exp 5
rel2
???? 11000
rel
rel
log2
logic
if1
iiifffifififi 11000 23
if jump [23] 23
io1
fact1
fact1 {"name": "c", "addr": 4002, "type": "int", "dim": 1}
arr
factor c
term2 c
exp2
exp c
rel2
rel
log2
logic
io2 write 4002
write -1 -1 4002
io3
write
stmnt
stmnt
else1
falso 23 25
eo 22 GOTOF 11000 -1 25
ass1 4002 1
arracess None
ass2
fc1 myfunc
f2 0
fc2 myfunc {"ret": "int", "varc": 0, "paramcount": 1, "params": ["int"], "vart": [2, 0, 0, 1], "addr": 4004, "quad": 1, "var": [{"name": "x", "addr": 0, "type": "int", "dim": 1}]}
era 4
myfunc
26
ctes1
ctes1 12004
factor 3
term2 3
exp2
exp 3
rel2
rel
log2
logic
fc3 0 myfunc 1
aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa 3
asdfghj 12004 int
multiargggggggggggggggg None
arg 1
fc4
fc5
func exp
aaaaaaaaa a1 None
factor None
term2 None
exp2
exp None
rel2
rel
log2
logic
ass3 None
[0, 4001, 8005, 4002, 4002, 4004]
if op = 4002 4004 =
= 4002 4004 -1
???? -1
ass stmnt
io1
fact1
fact1 {"name": "c", "addr": 4002, "type": "int", "dim": 1}
arr
factor c
term2 c
exp2
exp c
rel2
rel
log2
logic
io2 write 4002
write -1 -1 4002
io3
write
stmnt
stmnt
stmnt
else stmnt
if2
if2 ?  top stackjumps 24 quadcont 31 GOTO -1 -1 30
if stmnt
stmnt
stmnt
stmnt
stmnt
stmnt
maintemp
main
lastquad
program
0 GOTO -1 -1 13
1 write -1 -1 0
2 == 0 12000 11000
3 GOTOF 11000 -1 6
4 RETURN -1 4004 12001
5 GOTO -1 -1 12
6 ERA myfunc -1 1
7 + 4004 0 8000
8 - 8000 12000 8001
9 PARAMETER -1 0 8001
10 GOSUB -1 myfunc 1
11 RETURN -1 4004 12002
12 ENDFUNC -1 -1 -1
13 + 12003 12004 8000
14 = 4000 8000 -1
15 + 12005 12004 8001
16 * 8001 4000 8002
17 - 8002 12006 8003
18 * 4000 12007 8004
19 + 8003 8004 8005
20 = 4002 12000 -1
21 < 4000 12003 11000
22 GOTOF 11000 -1 25
23 write -1 -1 4002
24 GOTO -1 -1 30
25 ERA myfunc -1 4
26 PARAMETER -1 0 12004
27 GOSUB -1 myfunc 1
28 = 4002 4004 -1
29 write -1 -1 4002
30 ENDPROG -1 -1 -1
69
